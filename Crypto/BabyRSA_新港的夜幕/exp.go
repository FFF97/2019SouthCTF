package main

import (
	"crypto/rand"
	"crypto/rsa"
	"fmt"
	"math/big"
	"strconv"
)

func main() {
    d:=&big.Int{}
	d.SetString("15333842392319287954103535799182960029819895990832503454889934205518126638744981316183794070802869074098251406551690237109873209357430017439265940979467395739853663815843243683031133309326868052814308633218975771524420164013565005460071402425558673889999634692901744007067421361362844316071954724390772600044944589685319809254231618647178741060584939862390466476820595926074644779551198953340612530754062955190415141505052448746790215692976250053387604744605860748484642464694668293389172141171766019089643117699463720595969078787537593051866885730877519095999974177093498811355005005973311558649024828493126507655121",10)

	n:=&big.Int{}
	n.SetString("21753231354101547170770470499622348885735145649093875769489828734052892298708354233364446003381337110833541191661322663148467660706493734504776759832269513487949208076258602533818459720184318279916257438692382949940384100460138315536435255552608152276747538993196562482221304278624948112267196934268417080961083204840653185688025844080861724257714006954973164156780461062403002409444545905444788216984704813635893814057070507020035250676021577076567058592455542336243671482242887572777453659529032456234111275603510022806022363665248792659084365786757093812975542070738523387218259465260954414888193532646266763910963",10)

	c:="795eb8ac3caeb4873970fecbea296a74d3b34fe0d528726aab96933454a75207f4475a56860323109cff6568431eb39b3b43accb51b8bf487b1c84b38612209c1349c2dcf36baf13b3b87f10c14b2eff57bbb4e5d380a0c698fe5e9690f8dcc37193dec77a1f5351389df9f43239fcbe9162e515c4fac4e75830355175a8fb68502421c55715bae7799ba44d98ef20f66cad00a12ae288030d44a02ec0f59001f2cc6dcb5f140ef8ce679e77c62cf9442acdc376fc6b752d20fac0503cb6e6436ceb4dc9b17e57b36d5585871ebb884f0f6a632e41537c27767a1a7f9c0ffc8a3ce6d25caece3ec8745ed9eee976e0c23471db54eff14ebeaf2c6ffac8f0652c"
	b:=make([]byte,len(c)/2)
	pos:=0
	for i:=0;i<len(c);i+=2{
		res,err:=strconv.ParseInt(c[i:i+2],16,16)
		if err!=nil{
			log.Fatal(err.Error())
		}
		b[pos]= byte(res)
		pos++
	}

	pri:=&rsa.PrivateKey{
		D:d,
		PublicKey:rsa.PublicKey{
			N: n,
			E:65537,
		},
	}

	res, _ := rsa.DecryptPKCS1v15(rand.Reader, pri, b)
	fmt.Println(string(res))
}